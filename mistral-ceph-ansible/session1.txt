[stack@undercloud mistral-ceph-ansible]$ ./mistral-ceph-ansible.sh  
+----------------+----------------+----------------+--------+-------+----------------+------------------+
| ID             | Name           | Project ID     | Tags   | Input | Created at     | Updated at       |
+----------------+----------------+----------------+--------+-------+----------------+------------------+
| 593e75a7-fdf3- | mistral-ceph-  | cca2560a41ef4d | <none> |       | 2017-02-04     | 2017-02-05       |
| 49b6-984e-     | ansible        | 9aab4d168146d1 |        |       | 19:16:52       | 18:05:44         |
| bc400771acf2   |                | 0518           |        |       |                |                  |
+----------------+----------------+----------------+--------+-------+----------------+------------------+
+-------------------+--------------------------------------+
| Field             | Value                                |
+-------------------+--------------------------------------+
| ID                | bd7112c4-5c37-4e22-b8d1-55219a51358c |
| Workflow ID       | 593e75a7-fdf3-49b6-984e-bc400771acf2 |
| Workflow name     | mistral-ceph-ansible                 |
| Description       |                                      |
| Task Execution ID | <none>                               |
| State             | RUNNING                              |
| State info        | None                                 |
| Created at        | 2017-02-06 22:34:03                  |
| Updated at        | 2017-02-06 22:34:03                  |
+-------------------+--------------------------------------+
+-------------------+--------------------------------------+
| Field             | Value                                |
+-------------------+--------------------------------------+
| ID                | bd7112c4-5c37-4e22-b8d1-55219a51358c |
| Workflow ID       | 593e75a7-fdf3-49b6-984e-bc400771acf2 |
| Workflow name     | mistral-ceph-ansible                 |
| Description       |                                      |
| Task Execution ID | <none>                               |
| State             | RUNNING                              |
| State info        | None                                 |
| Created at        | 2017-02-06 22:34:03                  |
| Updated at        | 2017-02-06 22:34:03                  |
+-------------------+--------------------------------------+
Getting output for the following tasks in workflow mistral-ceph-ansible
+---------------------+-------------+---------------------+----------------------+---------+------------+
| ID                  | Name        | Workflow name       | Execution ID         | State   | State info |
+---------------------+-------------+---------------------+----------------------+---------+------------+
| 62497fd0-8581-40c1- | resolv_conf | mistral-ceph-       | bd7112c4-5c37-4e22-b | SUCCESS | None       |
| ad33-ef16d4b7384d   |             | ansible             | 8d1-55219a51358c     |         |            |
| a9e04981-8a1a-4af1  | zap         | mistral-ceph-       | bd7112c4-5c37-4e22-b | RUNNING | None       |
| -adef-4f9979692d35  |             | ansible             | 8d1-55219a51358c     |         |            |
+---------------------+-------------+---------------------+----------------------+---------+------------+
{
  "stdout": "",
  "stderr": "192.168.24.17 | SUCCESS => {
    "changed": true, 
    "checksum": "72b1d4babfc0123fdd2c509251c0f947c1280d09", 
    "dest": "/etc/resolv.conf", 
    "gid": 0, 
    "group": "root", 
    "md5sum": "1af861f0c4bd8d927cd57bac5b5f507c", 
    "mode": "0644", 
    "owner": "root", 
    "secontext": "unconfined_u:object_r:net_conf_t:s0", 
    "size": 65, 
    "src": "/home/heat-admin/.ansible/tmp/ansible-tmp-1486420445.13-151511230470050/source", 
    "state": "file", 
    "uid": 0
}
192.168.24.10 | SUCCESS => {
    "changed": true, 
    "checksum": "72b1d4babfc0123fdd2c509251c0f947c1280d09", 
    "dest": "/etc/resolv.conf", 
    "gid": 0, 
    "group": "root", 
    "md5sum": "1af861f0c4bd8d927cd57bac5b5f507c", 
    "mode": "0644", 
    "owner": "root", 
    "secontext": "unconfined_u:object_r:net_conf_t:s0", 
    "size": 65, 
    "src": "/home/heat-admin/.ansible/tmp/ansible-tmp-1486420445.29-145981544854999/source", 
    "state": "file", 
    "uid": 0
}
"
}
[]
UUID: bd7112c4-5c37-4e22-b8d1-55219a51358c
TASK_ID: a9e04981-8a1a-4af1-adef-4f9979692d35
[stack@undercloud mistral-ceph-ansible]$ ./see-last-task.sh 
| c5cb3360-a5d1-456f-a3da-7ce69b5217b1 | ceph_install                 | mistral-ceph-ansible                                    | bd7112c4-5c37-4e22-b8d1-55219a51358c | RUNNING | None                         |
{
  "stdout": "",
  "stderr": "192.168.24.17 | SUCCESS | rc=0 >>
GPT data structures destroyed! You may now partition the disk using fdisk or
other utilities.
Creating new GPT entries.
The operation has completed successfully.
GPT data structures destroyed! You may now partition the disk using fdisk or
other utilities.
Creating new GPT entries.
The operation has completed successfully.
GPT data structures destroyed! You may now partition the disk using fdisk or
other utilities.
Creating new GPT entries.
The operation has completed successfully.
GPT data structures destroyed! You may now partition the disk using fdisk or
other utilities.
Creating new GPT entries.
The operation has completed successfully.
GPT data structures destroyed! You may now partition the disk using fdisk or
other utilities.
Creating new GPT entries.
The operation has completed successfully.
"
}
[stack@undercloud mistral-ceph-ansible]$ echo c5cb3360-a5d1-456f-a3da-7ce69b5217b1 > TASK_ID 
[stack@undercloud mistral-ceph-ansible]$ ./see-last-task.sh 
| c5cb3360-a5d1-456f-a3da-7ce69b5217b1 | ceph_install                 | mistral-ceph-ansible                                    | bd7112c4-5c37-4e22-b8d1-55219a51358c | RUNNING | None                         |
[]
[stack@undercloud mistral-ceph-ansible]$

...


stack@undercloud mistral-ceph-ansible]$     UUID=$(mistral execution-list | grep $WORKFLOW | awk {'print $2'} | tail -1)
[stack@undercloud mistral-ceph-ansible]$     mistral execution-get $UUID
+-------------------+--------------------------------------+
| Field             | Value                                |
+-------------------+--------------------------------------+
| ID                | bd7112c4-5c37-4e22-b8d1-55219a51358c |
| Workflow ID       | 593e75a7-fdf3-49b6-984e-bc400771acf2 |
| Workflow name     | mistral-ceph-ansible                 |
| Description       |                                      |
| Task Execution ID | <none>                               |
| State             | SUCCESS                              |
| State info        | None                                 |
| Created at        | 2017-02-06 22:34:03                  |
| Updated at        | 2017-02-06 22:36:18                  |
+-------------------+--------------------------------------+
[stack@undercloud mistral-ceph-ansible]$     mistral task-list $UUID
+---------------------+--------------+---------------------+---------------------+---------+------------+
| ID                  | Name         | Workflow name       | Execution ID        | State   | State info |
+---------------------+--------------+---------------------+---------------------+---------+------------+
| 62497fd0-8581-40c1- | resolv_conf  | mistral-ceph-       | bd7112c4-5c37-4e22- | SUCCESS | None       |
| ad33-ef16d4b7384d   |              | ansible             | b8d1-55219a51358c   |         |            |
| a9e04981-8a1a-4af1  | zap          | mistral-ceph-       | bd7112c4-5c37-4e22- | SUCCESS | None       |
| -adef-4f9979692d35  |              | ansible             | b8d1-55219a51358c   |         |            |
| c5cb3360-a5d1-456f- | ceph_install | mistral-ceph-       | bd7112c4-5c37-4e22- | SUCCESS | None       |
| a3da-7ce69b5217b1   |              | ansible             | b8d1-55219a51358c   |         |            |
+---------------------+--------------+---------------------+---------------------+---------+------------+
[stack@undercloud mistral-ceph-ansible]$ 

[stack@undercloud mistral-ceph-ansible]$ ./see-last-task.sh
| c5cb3360-a5d1-456f-a3da-7ce69b5217b1 | ceph_install                 | mistral-ceph-ansible                                    | bd7112c4-5c37-4e22-b8d1-55219a51358c | SUCCESS | None                         |
{
  "stdout": "[DEPRECATION WARNING]: docker is kept for backwards compatibility but usage is 
discouraged. The module documentation details page may explain more about this 
rationale..
This feature will be removed in a future release. Deprecation 
warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
 [WARNING]: Consider using yum module rather than running yum
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
 [WARNING]: Consider using yum, dnf or zypper module rather than running rpm
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: ansible.utils.unicode.to_bytes is deprecated.  Use 
ansible.module_utils._text.to_bytes instead.
This feature will be removed in 
version 2.4. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: ansible.utils.unicode.to_unicode is deprecated.  Use 
ansible.module_utils._text.to_text instead.
This feature will be removed in 
version 2.4. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: ansible.utils.unicode.to_bytes is deprecated.  Use 
ansible.module_utils._text.to_bytes instead.
This feature will be removed in 
version 2.4. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: ansible.utils.unicode.to_unicode is deprecated.  Use 
ansible.module_utils._text.to_text instead.
This feature will be removed in 
version 2.4. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
[DEPRECATION WARNING]: always_run is deprecated. Use check_mode = no instead..

This feature will be removed in version 2.4. Deprecation warnings can be 
disabled by setting deprecation_warnings=False in ansible.cfg.
",
  "stderr": "
PLAY [mons,agents,osds,mdss,rgws,nfss,restapis,rbdmirrors,clients,iscsigws] ****

TASK [check for python2] *******************************************************
ok: [192.168.24.17]
ok: [192.168.24.10]

TASK [install python2 for Debian based systems] ********************************
skipping: [192.168.24.17]
skipping: [192.168.24.10]

TASK [install python2 for Fedora] **********************************************
skipping: [192.168.24.17]
skipping: [192.168.24.10]

TASK [gathering facts] *********************************************************
ok: [192.168.24.17]
ok: [192.168.24.10]

TASK [install required packages for Fedora > 23] *******************************
skipping: [192.168.24.17]
skipping: [192.168.24.10]

PLAY [mons] ********************************************************************

TASK [ceph.ceph-common : fail on unsupported system] ***************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail on unsupported architecture] *********************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail on unsupported distribution] *********************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail on unsupported distribution for red hat storage] *
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail on unsupported distribution for ubuntu cloud archive] ***
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail on unsupported ansible version] ******************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail if systemd is not present] ***********************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : make sure an installation origin was chosen] **********
skipping: [192.168.24.10]

TASK [ceph.ceph-common : make sure an installation source was chosen] **********
skipping: [192.168.24.10]

TASK [ceph.ceph-common : verify that a method was chosen for red hat storage] **
skipping: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
skipping: [192.168.24.10] => (item={'key': u'giant', 'value': 0.87}) 
skipping: [192.168.24.10] => (item={'key': u'firefly', 'value': 0.8}) 
skipping: [192.168.24.10] => (item={'key': u'infernalis', 'value': 9}) 
skipping: [192.168.24.10] => (item={'key': u'hammer', 'value': 0.94}) 
skipping: [192.168.24.10] => (item={'key': u'kraken', 'value': 11}) 
skipping: [192.168.24.10] => (item={'key': u'emperor', 'value': 0.72}) 
skipping: [192.168.24.10] => (item={'key': u'dumpling', 'value': 0.67}) 
skipping: [192.168.24.10] => (item={'key': u'jewel', 'value': 10}) 

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/./installs/install_on_redhat.yml for 192.168.24.10

TASK [ceph.ceph-common : install redhat dependencies] **************************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph.ceph-common : install centos dependencies] **************************
changed: [192.168.24.10] => (item=[u'python-pycurl', u'hdparm', u'epel-release', u'ntp', u'python-setuptools', u'libselinux-python'])

TASK [ceph.ceph-common : configure ceph yum repository] ************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/installs/redhat_ceph_repository.yml for 192.168.24.10

TASK [ceph.ceph-common : install the ceph stable repository key] ***************
changed: [192.168.24.10]

TASK [ceph.ceph-common : add ceph stable repository] ***************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : fetch ceph development repo file] *********************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : add ceph development repository] **********************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : add custom repo] **************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : purge yum cache] **************************************
changed: [192.168.24.10]

TASK [ceph.ceph-common : make sure /tmp exists] ********************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : use mktemp to create name for rundep] *****************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : copy rundep] ******************************************

TASK [ceph.ceph-common : install ceph dependencies] ****************************

TASK [ceph.ceph-common : synchronize ceph install] *****************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : create user group ceph] *******************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : create user ceph] *************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install distro or red hat storage ceph mon] ***********
ok: [192.168.24.10]

TASK [ceph.ceph-common : install distro or red hat storage ceph osd] ***********
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install distro or red hat storage ceph mds] ***********
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install distro or red hat storage ceph-fuse] **********
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install distro or red hat storage ceph base] **********
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install ceph-test] ************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install rados gateway] ********************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install nfs ceph gateway] *****************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : install nfs rgw gateway] ******************************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/./misc/ntp_redhat.yml for 192.168.24.10

TASK [ceph.ceph-common : include] **********************************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/checks/check_ntp_redhat.yml for 192.168.24.10

TASK [ceph.ceph-common : check ntp installation on redhat] *********************
ok: [192.168.24.10]

TASK [ceph.ceph-common : start the ntp service] ********************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : get ceph version] *************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : is ceph running already?] *****************************
ok: [192.168.24.10 -> 192.168.24.10]

TASK [ceph.ceph-common : create a local fetch directory if it does not exist] **
ok: [192.168.24.10 -> localhost]

TASK [ceph.ceph-common : set_fact] *********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : check if fetch/ directory exists] *********************
ok: [192.168.24.10 -> localhost]

TASK [ceph.ceph-common : check if /var/lib/ceph/mon/ceph-overcloud-jeos-mon-0/keyring already exists] ***
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail if /var/lib/ceph/mon/ceph-overcloud-jeos-mon-0/keyring doesn't exist] ***
skipping: [192.168.24.10]

TASK [ceph.ceph-common : get existing initial mon keyring if it already exists but not monitor_keyring.conf in fetch/] ***
skipping: [192.168.24.10]

TASK [ceph.ceph-common : test existing initial mon keyring] ********************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : fail if initial mon keyring found doesn't work] *******
skipping: [192.168.24.10]

TASK [ceph.ceph-common : write initial mon keyring in fetch//monitor_keyring.conf if it doesn't exist] ***
skipping: [192.168.24.10]

TASK [ceph.ceph-common : put initial mon keyring in mon kv store] **************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : check for a ceph socket] ******************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : check for a rados gateway socket] *********************
ok: [192.168.24.10]

TASK [ceph.ceph-common : create ceph initial directories] **********************
changed: [192.168.24.10] => (item=/etc/ceph)
changed: [192.168.24.10] => (item=/var/lib/ceph/)
changed: [192.168.24.10] => (item=/var/lib/ceph/mon)
changed: [192.168.24.10] => (item=/var/lib/ceph/osd)
changed: [192.168.24.10] => (item=/var/lib/ceph/mds)
changed: [192.168.24.10] => (item=/var/lib/ceph/tmp)
changed: [192.168.24.10] => (item=/var/lib/ceph/radosgw)
changed: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-rgw)
changed: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-mds)
changed: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-osd)

TASK [ceph.ceph-common : generate cluster fsid] ********************************
ok: [192.168.24.10 -> localhost]

TASK [ceph.ceph-common : reuse cluster fsid when cluster is already running] ***
skipping: [192.168.24.10]

TASK [ceph.ceph-common : read cluster fsid if it already exists] ***************
ok: [192.168.24.10 -> localhost]

TASK [ceph.ceph-common : create ceph conf directory] ***************************
ok: [192.168.24.10]

TASK [ceph.ceph-common : generate ceph configuration file: ceph.conf] **********
changed: [192.168.24.10]

TASK [ceph.ceph-common : create rbd client directory] **************************
ok: [192.168.24.10] => (item=/var/run/ceph)
changed: [192.168.24.10] => (item=/var/log/ceph)

TASK [ceph.ceph-common : configure cluster name] *******************************
changed: [192.168.24.10]

TASK [ceph.ceph-common : check /etc/default/ceph exist] ************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : configure cluster name] *******************************
skipping: [192.168.24.10]

TASK [ceph.ceph-common : configure cluster name] *******************************
skipping: [192.168.24.10]

TASK [ceph.ceph-docker-common : fail if systemd is not present] ****************
skipping: [192.168.24.10]

TASK [ceph-mon : generate monitor initial keyring] *****************************
ok: [192.168.24.10 -> localhost]

TASK [ceph-mon : read monitor initial keyring if it already exists] ************
ok: [192.168.24.10 -> localhost]

TASK [ceph-mon : create monitor initial keyring] *******************************
changed: [192.168.24.10]

TASK [ceph-mon : set initial monitor key permissions] **************************
changed: [192.168.24.10]

TASK [ceph-mon : create monitor directory] *************************************
changed: [192.168.24.10]

TASK [ceph-mon : ceph monitor mkfs with keyring] *******************************
changed: [192.168.24.10]

TASK [ceph-mon : ceph monitor mkfs without keyring] ****************************
skipping: [192.168.24.10]

TASK [ceph-mon : start the monitor service] ************************************
ok: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
included: /tmp/ceph-ansible/roles/ceph-mon/tasks/ceph_keys.yml for 192.168.24.10

TASK [ceph-mon : collect admin and bootstrap keys (for or after kraken release)] ***
ok: [192.168.24.10]

TASK [ceph-mon : wait for ceph.client.admin.keyring exists] ********************
ok: [192.168.24.10]

TASK [ceph-mon : test if initial mon keyring is in mon kv store] ***************
fatal: [192.168.24.10]: FAILED! => {"changed": false, "cmd": ["ceph", "--cluster", "ceph", "config-key", "get", "initial_mon_keyring"], "delta": "0:00:00.190826", "end": "2017-02-06 22:34:55.641458", "failed": true, "rc": 2, "start": "2017-02-06 22:34:55.450632", "stderr": "Error ENOENT: error obtaining 'initial_mon_keyring': (2) No such file or directory", "stdout": "", "stdout_lines": [], "warnings": []}
...ignoring

TASK [ceph-mon : put initial mon keyring in mon kv store] **********************
ok: [192.168.24.10]

TASK [ceph-mon : create ceph rest api keyring when mon is not containerized] ***
skipping: [192.168.24.10]

TASK [ceph-mon : check if does global key exist in ceph_conf_overrides] ********
ok: [192.168.24.10]

TASK [ceph-mon : check if ceph_conf_overrides.global.osd_pool_default_pg_num is set] ***
skipping: [192.168.24.10]

TASK [ceph-mon : get default value for osd_pool_default_pg_num] ****************
ok: [192.168.24.10]

TASK [ceph-mon : set_fact] *****************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : set_fact] *****************************************************
ok: [192.168.24.10]

TASK [ceph-mon : set_fact] *****************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : test if rbd exists] *******************************************
ok: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
included: /tmp/ceph-ansible/roles/ceph-mon/tasks/rbd_pool.yml for 192.168.24.10

TASK [ceph-mon : check rbd pool usage] *****************************************
ok: [192.168.24.10]

TASK [ceph-mon : check pg num for rbd pool] ************************************
ok: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : find ceph keys] ***********************************************
ok: [192.168.24.10]

TASK [ceph-mon : set keys permissions] *****************************************
ok: [192.168.24.10] => (item=/etc/ceph/ceph.client.admin.keyring)

TASK [ceph-mon : copy keys to the ansible server] ******************************
changed: [192.168.24.10] => (item=/etc/ceph/ceph.client.admin.keyring)
changed: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-osd/ceph.keyring)
changed: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-rgw/ceph.keyring)
changed: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-mds/ceph.keyring)

TASK [ceph-mon : drop in a motd script to report status when logging in] *******
skipping: [192.168.24.10]

TASK [ceph-mon : create filesystem pools] **************************************
skipping: [192.168.24.10] => (item=cephfs_data) 
skipping: [192.168.24.10] => (item=cephfs_metadata) 

TASK [ceph-mon : create ceph filesystem] ***************************************
skipping: [192.168.24.10]

TASK [ceph-mon : allow multimds] ***********************************************
skipping: [192.168.24.10]

TASK [ceph-mon : set max_mds] **************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : collect all the pools] ****************************************
skipping: [192.168.24.10]

TASK [ceph-mon : secure the cluster] *******************************************

TASK [ceph-mon : check if a cluster is already running] ************************
skipping: [192.168.24.10]

TASK [ceph-mon : check if it is Atomic host] ***********************************
skipping: [192.168.24.10]

TASK [ceph-mon : set fact for using Atomic host] *******************************
skipping: [192.168.24.10]

TASK [ceph-mon : set config and keys paths] ************************************
skipping: [192.168.24.10]

TASK [ceph-mon : stat for ceph config and keys] ********************************

TASK [ceph-mon : fail if we find existing cluster files] ***********************

TASK [ceph-mon : install pip and docker on ubuntu] *****************************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph-mon : install pip and docker on debian] *****************************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph-mon : install epel-release on redhat] *******************************
skipping: [192.168.24.10]

TASK [ceph-mon : enable extras on centos] **************************************
skipping: [192.168.24.10]

TASK [ceph-mon : install pip on redhat] ****************************************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph-mon : install docker-engine on redhat] ******************************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph-mon : install docker on redhat] *************************************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph-mon : install pip and docker on redhat (dnf)] ***********************
skipping: [192.168.24.10] => (item=[]) 

TASK [ceph-mon : install six] **************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : pause after docker install before starting (on openstack vms)] 
skipping: [192.168.24.10]

TASK [ceph-mon : start docker service] *****************************************
skipping: [192.168.24.10]

TASK [ceph-mon : install docker-py] ********************************************
skipping: [192.168.24.10]

TASK [ceph-mon : install docker-py] ********************************************
skipping: [192.168.24.10]

TASK [ceph-mon : install ntp] **************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : include] ******************************************************
skipping: [192.168.24.10]

TASK [ceph-mon : create bootstrap directories] *********************************
skipping: [192.168.24.10] => (item=/etc/ceph/) 
skipping: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-osd) 
skipping: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-mds) 
skipping: [192.168.24.10] => (item=/var/lib/ceph/bootstrap-rgw) 

TASK [ceph-mon : create a local fetch directory if it does not exist] **********
skipping: [192.168.24.10]

TASK [ceph-mon : generate cluster uuid] ****************************************
skipping: [192.168.24.10]

TASK [ceph-mon : read cluster uuid if it already exists] ***********************
skipping: [192.168.24.10]

TASK [ceph-mon : generate ceph.conf configuration file] ************************
skipping: [192.168.24.10]

TASK [ceph-mon : set config and keys paths] ************************************
skipping: [192.168.24.10]

TASK [ceph-mon : stat for ceph config and keys] ********************************

TASK [ceph-mon : try to fetch ceph config and keys] ****************************

TASK [ceph-mon : check if selinux is enabled] **********************************
skipping: [192.168.24.10]

TASK [ceph-mon : set selinux permissions] **************************************
skipping: [192.168.24.10] => (item=/etc/ceph) 
skipping: [192.168.24.10] => (item=/var/lib/ceph) 

TASK [ceph-mon : populate kv_store with default ceph.conf] *********************
skipping: [192.168.24.10]

TASK [ceph-mon : populate kv_store with custom ceph.conf] **********************
skipping: [192.168.24.10]

TASK [ceph-mon : delete populate-kv-store docker] ******************************
skipping: [192.168.24.10]

TASK [ceph-mon : generate systemd unit file] ***********************************
skipping: [192.168.24.10]

TASK [ceph-mon : enable systemd unit file for mon instance] ********************
skipping: [192.168.24.10]

TASK [ceph-mon : reload systemd unit files] ************************************
skipping: [192.168.24.10]

TASK [ceph-mon : systemd start mon container] **********************************
skipping: [192.168.24.10]

TASK [ceph-mon : wait for monitor socket to exist] *****************************
skipping: [192.168.24.10]

TASK [ceph-mon : force peer addition as potential bootstrap peer for cluster bringup] ***
skipping: [192.168.24.10] => (item=192.168.24.10) 

TASK [ceph-mon : push ceph files to the ansible server] ************************

TASK [ceph-mon : create ceph rest api keyring when mon is containerized] *******
skipping: [192.168.24.10]

TASK [ceph-mon : install calamari server] **************************************
skipping: [192.168.24.10]

TASK [ceph-mon : initialize the calamari server api] ***************************
skipping: [192.168.24.10]

RUNNING HANDLER [ceph.ceph-common : restart ceph mons] *************************
skipping: [192.168.24.10] => (item=192.168.24.10) 

RUNNING HANDLER [ceph.ceph-common : restart ceph osds] *************************
skipping: [192.168.24.10] => (item=192.168.24.17) 

RUNNING HANDLER [ceph.ceph-common : restart ceph mdss] *************************
skipping: [192.168.24.10]

RUNNING HANDLER [ceph.ceph-common : restart ceph rgws] *************************
skipping: [192.168.24.10]

RUNNING HANDLER [ceph.ceph-common : restart ceph nfss] *************************
skipping: [192.168.24.10]

PLAY [osds] ********************************************************************

TASK [ceph.ceph-common : fail on unsupported system] ***************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail on unsupported architecture] *********************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail on unsupported distribution] *********************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail on unsupported distribution for red hat storage] *
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail on unsupported distribution for ubuntu cloud archive] ***
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail on unsupported ansible version] ******************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail if systemd is not present] ***********************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : make sure an installation origin was chosen] **********
skipping: [192.168.24.17]

TASK [ceph.ceph-common : make sure an installation source was chosen] **********
skipping: [192.168.24.17]

TASK [ceph.ceph-common : verify that a method was chosen for red hat storage] **
skipping: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
skipping: [192.168.24.17] => (item={'key': u'firefly', 'value': 0.8}) 
skipping: [192.168.24.17] => (item={'key': u'giant', 'value': 0.87}) 
skipping: [192.168.24.17] => (item={'key': u'infernalis', 'value': 9}) 
skipping: [192.168.24.17] => (item={'key': u'hammer', 'value': 0.94}) 
skipping: [192.168.24.17] => (item={'key': u'kraken', 'value': 11}) 
skipping: [192.168.24.17] => (item={'key': u'jewel', 'value': 10}) 
skipping: [192.168.24.17] => (item={'key': u'dumpling', 'value': 0.67}) 
skipping: [192.168.24.17] => (item={'key': u'emperor', 'value': 0.72}) 

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : include] **********************************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/./misc/system_tuning.yml for 192.168.24.17

TASK [ceph.ceph-common : disable osd directory parsing by updatedb] ************
ok: [192.168.24.17]

TASK [ceph.ceph-common : disable transparent hugepage] *************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : get default vm.min_free_kbytes] ***********************
ok: [192.168.24.17]

TASK [ceph.ceph-common : define vm.min_free_kbytes] ****************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : apply operating system tuning] ************************
changed: [192.168.24.17] => (item={u'name': u'kernel.pid_max', u'value': 4194303})
changed: [192.168.24.17] => (item={u'name': u'fs.file-max', u'value': 26234859})
changed: [192.168.24.17] => (item={u'name': u'vm.zone_reclaim_mode', u'value': 0})
changed: [192.168.24.17] => (item={u'name': u'vm.vfs_cache_pressure', u'value': 50})
changed: [192.168.24.17] => (item={u'name': u'vm.swappiness', u'value': 10})
changed: [192.168.24.17] => (item={u'name': u'vm.min_free_kbytes', u'value': u'67584'})

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : include] **********************************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/./installs/install_on_redhat.yml for 192.168.24.17

TASK [ceph.ceph-common : install redhat dependencies] **************************
skipping: [192.168.24.17] => (item=[]) 

TASK [ceph.ceph-common : install centos dependencies] **************************
changed: [192.168.24.17] => (item=[u'python-pycurl', u'hdparm', u'epel-release', u'ntp', u'python-setuptools', u'libselinux-python'])

TASK [ceph.ceph-common : configure ceph yum repository] ************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/installs/redhat_ceph_repository.yml for 192.168.24.17

TASK [ceph.ceph-common : install the ceph stable repository key] ***************
changed: [192.168.24.17]

TASK [ceph.ceph-common : add ceph stable repository] ***************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : fetch ceph development repo file] *********************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : add ceph development repository] **********************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : add custom repo] **************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : purge yum cache] **************************************
changed: [192.168.24.17]

TASK [ceph.ceph-common : make sure /tmp exists] ********************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : use mktemp to create name for rundep] *****************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : copy rundep] ******************************************

TASK [ceph.ceph-common : install ceph dependencies] ****************************

TASK [ceph.ceph-common : synchronize ceph install] *****************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : create user group ceph] *******************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : create user ceph] *************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install distro or red hat storage ceph mon] ***********
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install distro or red hat storage ceph osd] ***********
ok: [192.168.24.17]

TASK [ceph.ceph-common : install distro or red hat storage ceph mds] ***********
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install distro or red hat storage ceph-fuse] **********
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install distro or red hat storage ceph base] **********
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install ceph-test] ************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install rados gateway] ********************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install nfs ceph gateway] *****************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : install nfs rgw gateway] ******************************
skipping: [192.168.24.17] => (item=[]) 

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : include] **********************************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/./misc/ntp_redhat.yml for 192.168.24.17

TASK [ceph.ceph-common : include] **********************************************
included: /tmp/ceph-ansible/roles/ceph-common/tasks/checks/check_ntp_redhat.yml for 192.168.24.17

TASK [ceph.ceph-common : check ntp installation on redhat] *********************
ok: [192.168.24.17]

TASK [ceph.ceph-common : start the ntp service] ********************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : include] **********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : get ceph version] *************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : is ceph running already?] *****************************
ok: [192.168.24.17 -> 192.168.24.10]

TASK [ceph.ceph-common : create a local fetch directory if it does not exist] **
ok: [192.168.24.17 -> localhost]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : check if fetch/ directory exists] *********************
ok: [192.168.24.17 -> localhost]

TASK [ceph.ceph-common : check if /var/lib/ceph/mon/ceph-overcloud-jeos-osd-0/keyring already exists] ***
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail if /var/lib/ceph/mon/ceph-overcloud-jeos-osd-0/keyring doesn't exist] ***
skipping: [192.168.24.17]

TASK [ceph.ceph-common : get existing initial mon keyring if it already exists but not monitor_keyring.conf in fetch/] ***
skipping: [192.168.24.17]

TASK [ceph.ceph-common : test existing initial mon keyring] ********************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : fail if initial mon keyring found doesn't work] *******
skipping: [192.168.24.17]

TASK [ceph.ceph-common : write initial mon keyring in fetch//monitor_keyring.conf if it doesn't exist] ***
skipping: [192.168.24.17]

TASK [ceph.ceph-common : put initial mon keyring in mon kv store] **************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : set_fact] *********************************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : check for a ceph socket] ******************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : check for a rados gateway socket] *********************
ok: [192.168.24.17]

TASK [ceph.ceph-common : create ceph initial directories] **********************
changed: [192.168.24.17] => (item=/etc/ceph)
changed: [192.168.24.17] => (item=/var/lib/ceph/)
changed: [192.168.24.17] => (item=/var/lib/ceph/mon)
changed: [192.168.24.17] => (item=/var/lib/ceph/osd)
changed: [192.168.24.17] => (item=/var/lib/ceph/mds)
changed: [192.168.24.17] => (item=/var/lib/ceph/tmp)
changed: [192.168.24.17] => (item=/var/lib/ceph/radosgw)
changed: [192.168.24.17] => (item=/var/lib/ceph/bootstrap-rgw)
changed: [192.168.24.17] => (item=/var/lib/ceph/bootstrap-mds)
changed: [192.168.24.17] => (item=/var/lib/ceph/bootstrap-osd)

TASK [ceph.ceph-common : generate cluster fsid] ********************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : reuse cluster fsid when cluster is already running] ***
ok: [192.168.24.17 -> localhost]

TASK [ceph.ceph-common : read cluster fsid if it already exists] ***************
ok: [192.168.24.17 -> localhost]

TASK [ceph.ceph-common : create ceph conf directory] ***************************
ok: [192.168.24.17]

TASK [ceph.ceph-common : generate ceph configuration file: ceph.conf] **********
changed: [192.168.24.17]

TASK [ceph.ceph-common : create rbd client directory] **************************
ok: [192.168.24.17] => (item=/var/run/ceph)
changed: [192.168.24.17] => (item=/var/log/ceph)

TASK [ceph.ceph-common : configure cluster name] *******************************
changed: [192.168.24.17]

TASK [ceph.ceph-common : check /etc/default/ceph exist] ************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : configure cluster name] *******************************
skipping: [192.168.24.17]

TASK [ceph.ceph-common : configure cluster name] *******************************
skipping: [192.168.24.17]

TASK [ceph.ceph-docker-common : fail if systemd is not present] ****************
skipping: [192.168.24.17]

TASK [ceph-osd : make sure public_network configured] **************************
skipping: [192.168.24.17]

TASK [ceph-osd : make sure cluster_network configured] *************************
skipping: [192.168.24.17]

TASK [ceph-osd : make sure journal_size configured] ****************************
skipping: [192.168.24.17]

TASK [ceph-osd : make sure an osd scenario was chosen] *************************
skipping: [192.168.24.17]

TASK [ceph-osd : verify only one osd scenario was chosen] **********************
skipping: [192.168.24.17]

TASK [ceph-osd : verify devices have been provided] ****************************
skipping: [192.168.24.17]

TASK [ceph-osd : verify journal devices have been provided] ********************
skipping: [192.168.24.17]

TASK [ceph-osd : verify directories have been provided] ************************
skipping: [192.168.24.17]

TASK [ceph-osd : include] ******************************************************
included: /tmp/ceph-ansible/roles/ceph-osd/tasks/pre_requisite.yml for 192.168.24.17

TASK [ceph-osd : enable extras repo for centos] ********************************
changed: [192.168.24.17]

TASK [ceph-osd : install rependencies] *****************************************
ok: [192.168.24.17]

TASK [ceph-osd : create bootstrap-osd and osd directories] *********************
ok: [192.168.24.17] => (item=/var/lib/ceph/bootstrap-osd/)
ok: [192.168.24.17] => (item=/var/lib/ceph/osd/)

TASK [ceph-osd : copy ceph admin key when using dmcrypt] ***********************
skipping: [192.168.24.17]

TASK [ceph-osd : copy osd bootstrap key] ***************************************
changed: [192.168.24.17] => (item={u'name': u'/var/lib/ceph/bootstrap-osd/ceph.keyring', u'copy_key': True})
skipping: [192.168.24.17] => (item={u'name': u'/etc/ceph/ceph.client.admin.keyring', u'copy_key': False}) 

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

TASK [ceph-osd : include] ******************************************************
included: /tmp/ceph-ansible/roles/ceph-osd/tasks/./scenarios/raw_multi_journal.yml for 192.168.24.17

TASK [ceph-osd : include] ******************************************************
included: /tmp/ceph-ansible/roles/ceph-osd/tasks/check_devices.yml for 192.168.24.17

TASK [ceph-osd : include] ******************************************************
included: /tmp/ceph-ansible/roles/ceph-osd/tasks/../tasks/./check_devices_static.yml for 192.168.24.17

TASK [ceph-osd : check if the device is a partition] ***************************
ok: [192.168.24.17] => (item=/dev/vdb)
ok: [192.168.24.17] => (item=/dev/vdc)
ok: [192.168.24.17] => (item=/dev/vdd)
ok: [192.168.24.17] => (item=/dev/vde)

TASK [ceph-osd : check the partition status of the osd disks] ******************
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde'])

TASK [ceph-osd : fix partitions gpt header or labels of the osd disks] *********
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script /dev/vdb print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:34.760113', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb'], u'delta': u'0:00:00.013580', u'stderr': u'', u'rc': 0, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script /dev/vdb print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.746533', u'warnings': [], u'failed': False}, u'/dev/vdb']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script /dev/vdc print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:35.033351', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc'], u'delta': u'0:00:00.008927', u'stderr': u'', u'rc': 0, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script /dev/vdc print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:35.024424', u'warnings': [], u'failed': False}, u'/dev/vdc']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script /dev/vdd print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:35.306161', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd'], u'delta': u'0:00:00.012315', u'stderr': u'', u'rc': 0, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script /dev/vdd print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:35.293846', u'warnings': [], u'failed': False}, u'/dev/vdd']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script /dev/vde print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:35.588479', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde'], u'delta': u'0:00:00.008501', u'stderr': u'', u'rc': 0, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script /dev/vde print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:35.579978', u'warnings': [], u'failed': False}, u'/dev/vde']) 

TASK [ceph-osd : check if a partition named 'ceph' exists] *********************
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde'])

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

TASK [ceph-osd : check the journal device is partition] ************************
ok: [192.168.24.17] => (item=/dev/vdf)
ok: [192.168.24.17] => (item=/dev/vdf)
ok: [192.168.24.17] => (item=/dev/vdf)
ok: [192.168.24.17] => (item=/dev/vdf)

TASK [ceph-osd : check the partition status of the journal devices] ************
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:37.478473', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdf', u'delta': u'0:00:00.010336', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:37.468137', u'warnings': [], u'failed': False}, u'/dev/vdf'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:37.811788', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdf', u'delta': u'0:00:00.005536', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:37.806252', u'warnings': [], u'failed': False}, None])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:38.144238', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdf', u'delta': u'0:00:00.005079', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:38.139159', u'warnings': [], u'failed': False}, None])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:38.441204', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdf', u'delta': u'0:00:00.004904', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:38.436300', u'warnings': [], u'failed': False}, None])

TASK [ceph-osd : fix partitions gpt header or labels of the journal devices] ***
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script /dev/vdf print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:38.757560', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:37.478473', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdf', u'delta': u'0:00:00.010336', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:37.468137', u'warnings': [], u'failed': False}, u'/dev/vdf'], u'delta': u'0:00:00.008061', u'stderr': u'', u'rc': 0, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script /dev/vdf print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:38.749499', u'warnings': [], u'failed': False}, u'/dev/vdf']) 
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script  print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:39.028650', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:37.811788', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdf', u'delta': u'0:00:00.005536', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:37.806252', u'warnings': [], u'failed': False}, None], u'delta': u'0:00:00.004968', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script  print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:39.023682', u'warnings': [], u'failed': False}, None])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script  print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:39.292547', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:38.144238', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdf', u'delta': u'0:00:00.005079', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:38.139159', u'warnings': [], u'failed': False}, None], u'delta': u'0:00:00.005733', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script  print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:39.286814', u'warnings': [], u'failed': False}, None])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u'parted --script  print > /dev/null 2>&1', u'end': u'2017-02-06 22:35:39.569593', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:38.441204', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdf', u'delta': u'0:00:00.004904', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdf | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:38.436300', u'warnings': [], u'failed': False}, None], u'delta': u'0:00:00.004895', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u'parted --script  print > /dev/null 2>&1', u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:39.564698', u'warnings': [], u'failed': False}, None])

TASK [ceph-osd : prepare filestore osd disk(s) with a dedicated journal device] 
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"parted --script /dev/vdb print | egrep -sq '^ 1.*ceph'", u'end': u'2017-02-06 22:35:36.033155', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb'], u'delta': u'0:00:00.005949', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"parted --script /dev/vdb print | egrep -sq '^ 1.*ceph'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:36.027206', u'warnings': [], u'failed': False}, u'/dev/vdb', u'/dev/vdf'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"parted --script /dev/vdc print | egrep -sq '^ 1.*ceph'", u'end': u'2017-02-06 22:35:36.425162', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc'], u'delta': u'0:00:00.015552', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"parted --script /dev/vdc print | egrep -sq '^ 1.*ceph'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:36.409610', u'warnings': [], u'failed': False}, u'/dev/vdc', u'/dev/vdf'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"parted --script /dev/vdd print | egrep -sq '^ 1.*ceph'", u'end': u'2017-02-06 22:35:36.755338', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd'], u'delta': u'0:00:00.007209', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"parted --script /dev/vdd print | egrep -sq '^ 1.*ceph'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:36.748129', u'warnings': [], u'failed': False}, u'/dev/vdd', u'/dev/vdf'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"parted --script /dev/vde print | egrep -sq '^ 1.*ceph'", u'end': u'2017-02-06 22:35:37.079741', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': [{u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'rc': 1, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde'], u'delta': u'0:00:00.010841', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"parted --script /dev/vde print | egrep -sq '^ 1.*ceph'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:37.068900', u'warnings': [], u'failed': False}, u'/dev/vde', u'/dev/vdf'])

TASK [ceph-osd : include] ******************************************************
included: /tmp/ceph-ansible/roles/ceph-osd/tasks/activate_osds.yml for 192.168.24.17

TASK [ceph-osd : automatically activate osd disk(s) without partitions] ********
skipping: [192.168.24.17] => (item={'key': u'vda', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104857600', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.00 GB', u'model': None, u'partitions': {u'vda1': {u'sectorsize': 512, u'uuid': u'2017-02-06-22-24-17-00', u'sectors': u'2048', u'start': u'2048', u'holders': [], u'size': u'1.00 MB'}, u'vda2': {u'sectorsize': 512, u'uuid': u'16610e1a-3c37-4d98-896a-595f6367c089', u'sectors': u'104853104', u'start': u'4096', u'holders': [], u'size': u'50.00 GB'}}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdd', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vde', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdb', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdf', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdc', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 

TASK [ceph-osd : activate osd(s) when device is a disk] ************************
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd'])
ok: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde'])

TASK [ceph-osd : automatically activate osd disk(s) without partitions (dmcrypt)] ***
skipping: [192.168.24.17] => (item={'key': u'vda', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104857600', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.00 GB', u'model': None, u'partitions': {u'vda1': {u'sectorsize': 512, u'uuid': u'2017-02-06-22-24-17-00', u'sectors': u'2048', u'start': u'2048', u'holders': [], u'size': u'1.00 MB'}, u'vda2': {u'sectorsize': 512, u'uuid': u'16610e1a-3c37-4d98-896a-595f6367c089', u'sectors': u'104853104', u'start': u'4096', u'holders': [], u'size': u'50.00 GB'}}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdc', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdb', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vde', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdd', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 
skipping: [192.168.24.17] => (item={'key': u'vdf', 'value': {u'scheduler_mode': u'', u'sectorsize': u'512', u'vendor': u'0x1af4', u'sectors': u'104874112', u'sas_device_handle': None, u'sas_address': None, u'host': u'SCSI storage controller: Red Hat, Inc Virtio block device', u'rotational': u'1', u'removable': u'0', u'support_discard': u'0', u'holders': [], u'size': u'50.01 GB', u'model': None, u'partitions': {}}}) 

TASK [ceph-osd : activate osd(s) when device is a disk (dmcrypt)] **************
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde']) 

TASK [ceph-osd : combine ispartition results] **********************************
ok: [192.168.24.17]

TASK [ceph-osd : fail if ceph-disk cannot create an OSD] ***********************
skipping: [192.168.24.17] => (item={u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:36:11.219574', u'_ansible_no_log': False, u'stdout': u'', u'cmd': [u'ceph-disk', u'activate', u'/dev/vdb1'], u'rc': 0, u'item': [{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb'], u'delta': u'0:00:01.607669', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u'ceph-disk activate /dev/vdb1', u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:36:09.611905', u'warnings': [], u'failed': False}) 
skipping: [192.168.24.17] => (item={u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:36:12.453258', u'_ansible_no_log': False, u'stdout': u'', u'cmd': [u'ceph-disk', u'activate', u'/dev/vdc1'], u'rc': 0, u'item': [{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc'], u'delta': u'0:00:00.824342', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u'ceph-disk activate /dev/vdc1', u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:36:11.628916', u'warnings': [], u'failed': False}) 
skipping: [192.168.24.17] => (item={u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:36:13.650417', u'_ansible_no_log': False, u'stdout': u'', u'cmd': [u'ceph-disk', u'activate', u'/dev/vdd1'], u'rc': 0, u'item': [{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd'], u'delta': u'0:00:00.785642', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u'ceph-disk activate /dev/vdd1', u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:36:12.864775', u'warnings': [], u'failed': False}) 
skipping: [192.168.24.17] => (item={u'_ansible_parsed': True, u'_ansible_item_result': True, u'end': u'2017-02-06 22:36:14.781079', u'_ansible_no_log': False, u'stdout': u'', u'cmd': [u'ceph-disk', u'activate', u'/dev/vde1'], u'rc': 0, u'item': [{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde'], u'delta': u'0:00:00.817037', u'stderr': u'', u'changed': False, u'invocation': {u'module_name': u'command', u'module_args': {u'warn': True, u'executable': None, u'_uses_shell': False, u'_raw_params': u'ceph-disk activate /dev/vde1', u'removes': None, u'creates': None, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:36:13.964042', u'warnings': [], u'failed': False}) 

TASK [ceph-osd : activate osd(s) when device is a partition] *******************
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.636235', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdb', u'delta': u'0:00:00.005001', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdb | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.631234', u'warnings': [], u'failed': False}, u'/dev/vdb']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:33.902713', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdc', u'delta': u'0:00:00.004733', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdc | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:33.897980', u'warnings': [], u'failed': False}, u'/dev/vdc']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.161844', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vdd', u'delta': u'0:00:00.004903', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vdd | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.156941', u'warnings': [], u'failed': False}, u'/dev/vdd']) 
skipping: [192.168.24.17] => (item=[{u'_ansible_parsed': True, u'cmd': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'end': u'2017-02-06 22:35:34.449800', u'_ansible_no_log': False, u'stdout': u'', u'_ansible_item_result': True, u'changed': False, u'item': u'/dev/vde', u'delta': u'0:00:00.004870', u'stderr': u'', u'rc': 1, u'invocation': {u'module_name': u'command', u'module_args': {u'creates': None, u'executable': None, u'_uses_shell': True, u'_raw_params': u"readlink -f /dev/vde | egrep '/dev/([hsv]d[a-z]{1,2}|cciss/c[0-9]d[0-9]p|nvme[0-9]n[0-9]p)[0-9]{1,2}$'", u'removes': None, u'warn': True, u'chdir': None}}, u'stdout_lines': [], u'failed_when_result': False, u'start': u'2017-02-06 22:35:34.444930', u'warnings': [], u'failed': False}, u'/dev/vde']) 

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

TASK [ceph-osd : get osd id] ***************************************************
ok: [192.168.24.17]

TASK [ceph-osd : start and add that the osd service(s) to the init sequence] ***
ok: [192.168.24.17] => (item=0)
ok: [192.168.24.17] => (item=1)
ok: [192.168.24.17] => (item=2)
ok: [192.168.24.17] => (item=3)

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

TASK [ceph-osd : include] ******************************************************
skipping: [192.168.24.17]

RUNNING HANDLER [ceph.ceph-common : restart ceph mons] *************************
skipping: [192.168.24.17] => (item=192.168.24.10) 

RUNNING HANDLER [ceph.ceph-common : restart ceph osds] *************************
skipping: [192.168.24.17] => (item=192.168.24.17) 

RUNNING HANDLER [ceph.ceph-common : restart ceph mdss] *************************
skipping: [192.168.24.17]

RUNNING HANDLER [ceph.ceph-common : restart ceph rgws] *************************
skipping: [192.168.24.17]

RUNNING HANDLER [ceph.ceph-common : restart ceph nfss] *************************
skipping: [192.168.24.17]

PLAY RECAP *********************************************************************
192.168.24.10              : ok=55   changed=12   unreachable=0    failed=0   
192.168.24.17              : ok=60   changed=10   unreachable=0    failed=0   

"
}
[stack@undercloud mistral-ceph-ansible]$ 

